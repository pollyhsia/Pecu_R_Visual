install.packages(animation)
install.packages("animation")
rm(list = ls(all = T))  #清除環境裡的和紀錄
library(png)            #可以按tab鍵讓你install的東西叫出來
library(aimation)
library(animation)
rawData = read.csv('NTU_Student.csv', header = T)
View(rawData)
year = rawData$年度    #按tab鍵可以看見你assign過的變數或內建function
year = rawData$年度    #按tab鍵可以看見你assign過的變數或內建function
#$只能用在dataframe!!
yearId =rawData[,1]
year = rawData[,-72]
View(year)
year = rawData[,-72]
View(rawData)
yearId
year = rawData$年度    #按tab鍵可以看見你assign過的變數或內建function
#$只能用在dataframe!!
yearId =rawData[,1]    #同第六行
year
rawData = rawData[,-72]
View(rawData)
rawData = rawData[-72,]
View(rawData)
View(rawData)
allLine = length(rawData[,1])
allLine
nrow(rawData)
?Encoding
barplot(as.matrix(rawData[,c(-1,-2)]))
rm(list = ls(all = T))  #清除環境裡的和紀錄
rawData = read.csv('NTU_Student.csv', header = T)
rawData = rawData[-72,] #把最後一行刪掉
barplot(as.matrix(rawData[,c(-1,-2)]))
barplot(as.matrix(rawData[,c(-1,-2)]))
barplot(as.matrix(rawData[1,c(-1,-2)]))
ncol(rawData)
for(yid in c(1:nrow(rawData))){
barplot(as.matrix(rawData[yid,c(-1,-2)]))
}
for(yid in c(1:nrow(rawData))){
barplot(as.matrix(rawData[yid,c(-1,-2)]),
main = paste0("國立台灣大學", rawData[yid,1],
"年大學部總計", rawData[yid,1],"人"))
}
barplot(as.matrix(rawData[yid,c(-1,-2)]),
main = paste0("國立台灣大學", rawData[yid,1],
"年大學部總計", rawData[yid,2],"人"))
for(yid in c(1:nrow(rawData))){
barplot(as.matrix(rawData[yid,c(-1,-2)]),
main = paste0("國立台灣大學", rawData[yid,1],
"年大學部總計", rawData[yid,2],"人"))
}
ani.options("convert")
source('D:/R/pecu_R/pecu_R_visual_class1/NTU_Student/NTU_Student.R', encoding = 'UTF-8')
source('D:/R/pecu_R/pecu_R_visual_class1/NTU_Student/NTU_Student.R', encoding = 'UTF-8')
knitr::opts_chunk$set(echo = TRUE)
library(png)            #可以按tab鍵讓你install的東西叫出來
library(animation)
rawData = read.csv('NTU_Student.csv', header = T)
allLine = nrow(rawData)  #如果不知道有幾個rows，用13~14行的方法
rawData = rawData[-allLine,]
for(yid in c(1:nrow(rawData))){
barplot(as.matrix(rawData[yid,c(-1,-2)]),
main = paste0("國立台灣大學", rawData[yid,1],
"年大學部總計", rawData[yid,2],"人"))
}
?mean.Date()
library(plotly)
?rnorm
x <- c(1:100)
random_y <- rnorm(100, mean = 0)
data <- data.frame(x, random_y)
p <- plot_ly(data, x = ~x, y = ~random_y, type = 'scatter', mode = 'lines')
library("plotly", lib.loc="~/R/win-library/3.3")
library("ggplot2", lib.loc="~/R/win-library/3.3")
library(plotly)
x <- c(1:100)
t <-
random_y <- rnorm(100, mean = 0)
data <- data.frame(x, random_y)
p <- plot_ly(data, x = ~x, y = ~random_y,
type = 'scatter', mode = 'lines')
library(ggplot2)
x <- c(1:100)
t <-
random_y <- rnorm(100, mean = 0)
data <- data.frame(x, random_y)
t <-
random_y <- rnorm(100, mean = 0)
data <- data.frame(x, random_y)
p <- plot_ly(data, x = ~x, y = ~random_y,
type = 'scatter', mode = 'lines')
plot_ly()
